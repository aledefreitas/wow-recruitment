name: "Lint"

on:
    pull_request:

env:
    fail-fast: true

permissions:
    contents: read
    pull-requests: write

jobs:
    linters:
        name: Linters
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php-version: ["8.3"]

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v4

            - name: "Install PHP with extensions"
              uses: shivammathur/setup-php@v2
              with:
                  coverage: "none"
                  extensions: "intl, mbstring, pdo_sqlite, zip"
                  php-version: ${{ matrix.php-version }}
                  tools: "composer:v2, cs2pr"

            - name: "Set composer cache directory"
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: "Cache composer"
              uses: actions/cache@v4
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: "Install dependencies"
              run: composer install --ansi --no-interaction --no-progress --no-scripts

            - name: "Copy .env.example"
              run: if [ ! -f ./.env ]; then cp ./.env.example ./.env; fi

            - name: Install PHPUnit
              id: install
              run: vendor/bin/simple-phpunit install

            - name: Lint YAML files
              if: always() && steps.install.outcome == 'success'
              run: ./bin/console lint:yaml config --parse-tags

            - name: Lint Parameters and Services
              if: always() && steps.install.outcome == 'success'
              run: ./bin/console lint:container --no-debug

            - name: Lint Composer config
              if: always() && steps.install.outcome == 'success'
              run: composer validate --strict

            - name: Check if any dependencies are compromised
              if: always() && steps.install.outcome == 'success'
              run: composer audit

            - name: Run PHPStan
              if: always() && steps.install.outcome == 'success'
              run: ./vendor/bin/phpstan analyze --error-format=checkstyle | cs2pr

            - name: Run PHP_CodeSniffer
              if: always() && steps.install.outcome == 'success'
              run: ./vendor/bin/phpcs --report=checkstyle -q | cs2pr

            - name: Run PHP CS Fixer
              if: always() && steps.install.outcome == 'success'
              run: ./vendor/bin/php-cs-fixer fix --dry-run --format=checkstyle | cs2pr
