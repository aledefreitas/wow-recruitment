version: '3'

silent: true
vars:
  ENV: '{{default "dev" .ENV}}'
env:
  ENV: '{{.ENV}}'

tasks:
  authenticate:
    silent: true
    run: once
    internal: true
    cmds:
      - infisical login -i
  export-*:
    internal: true
    vars:
      ENV: '{{index .MATCH 0}}'
      FILE: '{{default ".env" .FILE}}'
    preconditions:
      - sh: '[[ "$ENV" == "dev" || "$ENV" == "staging" || "$ENV" == "prod" ]]'
        msg: 'Valid commands for export are: export-dev, export-staging, export-prod'
    deps:
      - authenticate
    cmds:
      - infisical export --env="{{.ENV}}" > {{.FILE}}
  generate-dev-dotenv:
    cmds:
      - if [ ! -f ./.env ]; then cp ./.env.example ./.env; fi
  generate-*-dotenv:
    vars:
      ENV: '{{index .MATCH 0}}'
      TMPFILE: '/tmp/env_{{.ENV}}'
    preconditions:
      - sh: '[[ "$ENV" == "prod" || "$ENV" == "staging" ]]'
        msg: 'Valid commands for generate-dotenv are: generate-dev-dotenv, generate-staging-dotenv, generate-prod-dotenv'
    cmds:
      - defer: rm -f {{.TMPFILE}}
      - task: export-{{.ENV}}
        vars: {FILE: '{{.TMPFILE}}'}
      - 'if [[ ! -s {{.TMPFILE}} ]] then echo "ERROR: There are no env variables to be generated for {{.ENV}} in Infisical"; exit 1; fi'
      - if [[ $(md5sum {{.TMPFILE}} ./.env | awk '{print $1}' | uniq | wc -l) != 1 ]] then cp -f {{.TMPFILE}} ./.env; fi

